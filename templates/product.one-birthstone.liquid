{% assign add_to_cart = 'Buy now' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}
{% assign ring = 'no' %}
{% if product.type == "Ring" %}
  {% assign ring = 'yes' %}
  {% assign unavailable = 'Choose your options' %}
{% endif %}

{% include 'facebook-pixels' %}

{% include 'add-to-cart-popup' %}

<div class="product col-xs-12 col-lg-12" itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />
  <form action="/cart/add" method="post" enctype="multipart/form-data" id="product-form">

  <div class="row producttopblock">

    <div class="product-photos col-sm-6 ">

    {% if product.images.size == 0 %}

      <div class="product-photo-container">
        <img src="{{ '' | img_url: '1024x1024' }}" alt="" />
      </div>

    {% else %}

      {% assign featured_image = product.selected_variant.featured_image | default: product.featured_image %}
      <div class="product-photo-container">
          <img src="{{ featured_image | img_url: '1024x1024' }}" alt="{{ product.title | escape }}" />
          <img class="top-seller-badge-test" style="display: none" src={{ "top-seller-badge.png" | asset_url }} />
          <img class="top-seller-badge-usa" style="display: none" src={{ "made-in-usa-badge.png" | asset_url }} />
      </div>

      {% if product.images.size > 1 %}
      <ul class="product-photo-thumbs clearfix grid">
        {% for image in product.images %}
        <li class="product-photo-thumb">
          <a href="{{ image | img_url: '1024x1024' }}">
            <img src="{{ image | img_url: 'medium' }}" alt="{{ image.alt | escape }}" />
          </a>
        </li>
        {% endfor %}
      </ul>
      {% endif %}

    {% endif %}    

    </div><!-- .product-photos -->

    <div class="product-details col-sm-6 ">
      <div class="row">
        <div class="container">
        <h1 class="product-title" itemprop="name">{{ product.title }}</h1>

        <div id="product-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer" class="delta">
          <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
          {% if product.available %}
          <link itemprop="availability" href="http://schema.org/InStock" />
          {% else %}
          <link itemprop="availability" href="http://schema.org/OutOfStock" />
          {% endif %}
          {% assign variant = product.selected_or_first_available_variant %}
          {% if product.compare_at_price > product.price %}
            <span class="product-compare-price">{{ variant.compare_at_price | money }}</span>
            <span class="product-price on-sale" itemprop="price">{{ variant.price | money }}</span>          
          {% else %}
          <span class="product-price" itemprop="price">{{ variant.price | money }}</span>
          {% endif %}
        </div>

        <div class="product-counter-status-mobile visible-xs-block">
          <div class="product-status" style="display: none;">
            <div>
              <h4><span></span> sold</h4>
              <p>We've reached our sales goal! You can still buy!</p>
            </div>
          </div>

          <div class="product-status-mobile-test" style="display: none;">
            <div>
              <h4>1283 sold</h4>
              <p>We've reached our sales goal! You can still buy!</p>
            </div>
          </div>

          <div class='product-counter' style="display: none;">
            <div>
              <h4></h4>
              <p>until the next batch is sent to be handmade</p>
            </div>
          </div>

          <div class="clearfix"></div>

        </div>
        </div>
      </div>  
      <div class="row bordertop">
        <div class="container">
          {% assign hide_default_title = false %}
          {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
            {% assign hide_default_title = true %}
          {% endif %}

          <div id="product-variants" class="{% if hide_default_title %} hidden{% endif %}">
            <select id="product-select" name="id" class="form-control" style="display: none;">
            {% for variant in product.variants %}
              <option{% if variant == product.selected_or_first_available_variant %} selected{% endif %} value="{{ variant.id }}">
              {{ variant.title }} - {{ variant.price | money }}
              </option>
            {% endfor %}
            </select>
            {% if product.available and product.variants.size > 1 %}
              {% for option in product.options %}
                {% include 'swatch' with option %}
              {% endfor %}
            {% endif %}
          </div>
          
          <div class="selector-wrapper clearfix hasJS">

            <label for="properties[Birthstone]">Birthstone</label>
            <select required class="single-option-selector custom" name="properties[Birthstone]" id="birthstone">
              <option value="choose">Please make a selection</option>
              <option class="january" value="January Garnet">January Garnet</option>
              <option class="february" value="February Amethyst">February Amethyst</option>
              <option class="march" value="March Aquamarine">March Aquamarine</option>
              <option class="april" value="April Diamond">April Diamond</option>
              <option class="may" value="May Emerald">May Emerald</option>
              <option class="june" value="June  Alexandrite">June  Alexandrite</option>
              <option class="july" value="July Ruby">July Ruby</option>
              <option class="august" value="August Peridot">August Peridot</option>
              <option class="september" value="September Sapphire">September Sapphire</option>
              <option class="october" value="October Pink Tourmaline">October Pink Tourmaline</option>
              <option class="november" value="November Topaz">November Topaz</option>
              <option class="december" value="December Zircon">December Zircon</option>
            </select>
          </div>

          <div class="shopmessage">
            <div id="backorder" class="hidden">
              <p>{{ '%s is back-ordered. We will ship it separately in 10 to 15 days.' | replace: '%s', '<span id="selected-variant"></span>' }}</p>
            </div>

            {% include 'inventory-message' %}

            {% include 'holiday-custom-property-checkbox' %}
          </div>
          

          <div id="product-add">
            <button type="button" name="add" id="add" class="btn btn-primary btn-lg btn-block btn-buy" >{{ add_to_cart | escape }}</button>
            <p>Guaranteed safe checkout</p>
            <img class="payment-logos" alt="We accept MasterCard, Visa, Amex, Discover, and PayPal" src="{{ 'payment-logos.png' | asset_url }}" onerror="this.onerror=null; this.src='{{ 'payment-logos.png' | asset_url }}'">
          </div>

          <div class="product-counter-status-desktop hidden-xs">

            <div class="product-status" style="display: none">
              <h3><span></span> sold, you can still buy!</h3>
              <p>We've reached our sales goal!</p>
            </div>

            <div class="product-status-awaiting-tip" style="display: none">
              <h3>Almost there! <span></span> more needed!</h3>
              <div class="product-progress-bar"><div class="product-progress-amount"></div></div>
              <p>This item needs to sell a minimum of 5 in order to be made.<br>You will be refunded in full if the item does not meet the goal.</p>
            </div>

            <div class="product-status-awaiting-tip-test" style="display: none">
              <h3>1283 sold, you can still buy!</h3>
              <div class="product-progress-bar"><div class="product-progress-amount" style="width: 100%"></div></div>
              <p>We've reached our sales goal!</p>
            </div>

            <div class="product-counter" style="display: none">
              <div>
                <h3 class="days">3</h3>
                <p class="timeRefDays">Days</p>
              </div>
              <div>
                <h3 class="hours">1</h3>
                <p class="timeRefHours">Hours</p>
              </div>
              <div>
                <h3 class="minutes">23</h3>
                <p class="timeRefMinutes">Minutes</p>
              </div>
              <div>
                <h3 class="seconds">43</h3>
                <p class="timeRefSeconds">Seconds</p>
              </div>
              <p>Until the next batch is sent to be handmade</p>
            </div>

          </div>

        </div>
      </div>

      

    </div><!-- .product-details -->
  </div>
  <div class="row">
    <ul class="nav nav-tabs">
      <li class="active"><a data-toggle="tab" href="#description">Product Description</a></li>
      <li><a data-toggle="tab" href="#specifications">Specifications</a></li>
      <li><a data-toggle="tab" href="#shippinginfo">Shipping Info</a></li>
    </ul>

    <div class="tab-content">
      <div id="description" class="tab-pane fade in active">
        <div id="product-description-desktop" class="rte" itemprop="description">
          {{ product.description }}
        </div>
      </div>
      <div id="specifications" class="tab-pane fade">
        {% if product.available and product.variants.size > 1 %}
          <table>
          {% for option in product.options %}
            {% include 'specifications' with option %}
          {% endfor %}
          </table>
        {% endif %}
      </div>
      <div id="shippinginfo" class="tab-pane fade">
        {% include 'product-policies' %}
        {% include 'product-policies-mobile' %}
      </div>
    </div>
  </div>
  </form>

</div>

{% comment %}
  Adding support for product options. See here for details:
  http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options
{% endcomment %}

{% include 'birthstone-sanity-check' %}

<script>

  jQuery(document).ready(function() {

    var $product_form = jQuery('#product-form');
    $product_form.data('original-data', $product_form.serialize());

    $product_form.on('change', function() {
      if ($product_form.serialize() != $product_form.data('original-data')) {
        $('#add-to-cart-popup').variantPopup(null, $product_form);
      }
    });

	var selectCallback = function(variant, selector) {

  if (variant) {
    
    {% include 'inventory-select-callback' %}

    // BEGIN SWATCHES
    var form = jQuery('#' + selector.domIdPrefix).closest('form');
    for (var i=0,length=variant.options.length; i<length; i++) {
      var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
      if (radioButton.size()) {
        radioButton.get(0).checked = true;
      }
    }
    // END SWATCHES

    // Swap image.
    if (variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }

    jQuery('.product-photo-thumb.active').removeClass('active');
    jQuery('.product-photo-container .zoomImg').remove();
    /* var zoomImg = variant.featured_image.src;
    jQuery('.product-photo-container').zoom({
      url: zoomImg,
      touch: false
    }); */

    // Selected a valid variant that is available.
    if (variant.available) {

      // Enabling add to cart button.
      jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});

      // If item is backordered yet can still be ordered, we'll show special message.
      if (variant.inventory_management && variant.inventory_quantity <= 0) {
        jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
        jQuery('#backorder').removeClass("hidden");
      } else {
        jQuery('#backorder').addClass("hidden");
      }
    } else {
      // Variant is sold out.
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);
    }


    // Whether the variant is in stock or not, we can update the price and compare at price.
    if ( variant.compare_at_price > variant.price ) {
      jQuery('#product-price').html('<span class="product-compare-price">'+ Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}") +'</span>\
        <span class="product-price on-sale" itemprop="price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>');
    } else {
      jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
    }

    $('#add-to-cart-popup').variantPopup(variant, $product_form);

  } else {
    // variant doesn't exist.
    //jQuery('#product-price').empty();
    jQuery('#backorder').addClass('hidden');
    //jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
  }

};

	jQuery(function($) {

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });

  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label style="display: none;">{{ product.options.first }}</label>');
  {% endif %}

});
      
    $("select.custom").each(function() {	
      var selector_width = $('.selector-wrapper').width();
      var sb = new SelectBox({
        selectbox: $(this),
        height: 350,
        width: selector_width,
        changeCallback: function(val) {
          console.log(val);
          $('#birthstone').val(val).change();
          console.log($('#birthstone').val());
        }
      });
    });

});
Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>

{% if ring == 'yes' %}
{% unless product.selected_variant %}
  {% if product.variants.size > 1 %}
    <script>
    var $addToCartForm = $('form[action="/cart/add"]');
    if (window.MutationObserver && $addToCartForm.length) {
      if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
        observer.disconnect();
      }
      var config = { childList: true, subtree: true };
      var observer = new MutationObserver(function() {
        {% for option in product.options %}
          $('.single-option-selector:eq({{ forloop.index0 }})')
            .filter(function() {
              return $(this).find('option').size() > 1
            })
            .prepend('<option value="">Pick a ' + {{ product.options[forloop.index0] | json }} + '</option>')
            .val('')
            .trigger('change');
        {% endfor %}
        observer.disconnect();
      });
      observer.observe($addToCartForm[0], config);
    }
    </script>
  {% endif %}
{% endunless %}
{% endif %}
